class MinStack {

    Stack<Integer>s1=new Stack<>();
    Stack<Integer>s2=new Stack<>();
    public MinStack() {
        
        
        
    }
    
    public void push(int x) {
        if(s2.empty()==true){
            s2.push(x);
        }else{
            if(x<=s2.peek()){
                s2.push(x);
            }
        }
        s1.push(x);
        
    }
    
    public void pop() {
        if(s1.empty()==true){
            return ;
        }        
        int temp=s1.peek();
        if(s2.empty()==false && s2.peek()==temp){
           s2.pop();
            
        }
        s1.pop();
        return;
        
    }
    
    public int top() {
        if(s1.empty()==true){
            return -1;
        }
        return s1.peek();
        
        
    }
    
    public int getMin() {
        if(s2.empty()==true){
            return -1;
        }
        return s2.peek();
        
        
    }
}
